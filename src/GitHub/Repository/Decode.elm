module GitHub.Repository.Decode exposing (..)

{-| Generated by <https://github.com/pravdomil/Elm-JSON-Interop>.
-}

import GitHub.Repository as A 
import Json.Decode as D exposing (Decoder)
import Utils.Json.Decode_ as D_ 

repository : Decoder A.Repository
repository  =
    (D.map5) (\v1 v2 v3 v4 v5 -> {name = v1
    , description = v2
    , url = v3
    , homepageUrl = v4
    , repositoryTopics = v5}) ((D.field) ("name") ((D.string))) ((D_.maybeField) ("description") ((D_.maybe) ((D.string)))) ((D.field) ("url") ((D.string))) ((D_.maybeField) ("homepageUrl") ((D_.maybe) ((D.string)))) ((D.field) ("repositoryTopics") ((D.map) (\v1 -> {nodes = v1}) ((D.field) ("nodes") ((D.list) ((D.map) (\v1 -> {topic = v1}) ((D.field) ("topic") ((D.map) (\v1 -> {name = v1}) ((D.field) ("name") ((D.string))))))))))

response : Decoder A.Response
response  =
    (D.map) (\v1 -> {data = v1}) ((D.field) ("data") ((D.map) (\v1 -> {viewer = v1}) ((D.field) ("viewer") ((D.map) (\v1 -> {repositories = v1}) ((D.field) ("repositories") ((D.map) (\v1 -> {nodes = v1}) ((D.field) ("nodes") ((D.list) ((repository))))))))))